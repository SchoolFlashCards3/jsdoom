import {MapGeometry} from "@src/convert/3DMapBuilder";
import {TextureSet} from "@src/lumps/textureLibrary";

interface MTLLibName {
    // Name of OBJ material
    texture: string;
    // Name of image file, without the extension
    file: string;
}

export function ConvertMapToMTL(convertedMap: MapGeometry, rawMtlNames: boolean = false): string {
    const textureNames: MTLLibName[] = [];
    const quadCountByTexture: {[texture: string]: number} = {};
    const flatCountByTexture: {[texture: string]: number} = {};
    // Get all of the quad texture names
    for(const quad of convertedMap.wallQuads){
        const textureKey = `${TextureSet[quad.textureSet]}[${quad.texture}]`;
        if(quadCountByTexture[textureKey] == null){
            quadCountByTexture[textureKey] = 1;
            textureNames.push({
                texture: rawMtlNames ? quad.texture : textureKey,
                file: quad.texture,
            });
        }
    }
    for(const flat of convertedMap.sectorTriangles){
        const textureKey = `${TextureSet[flat.textureSet]}[${flat.texture}]`;
        if(flatCountByTexture[textureKey] == null){
            flatCountByTexture[textureKey] = 1;
            textureNames.push({
                texture: rawMtlNames ? flat.texture : textureKey,
                file: flat.texture,
            });
        }
    }
    let mtlText = "# MTL generated by jsdoom\n\n";
    for(const name of textureNames){
        mtlText += (
            `newmtl ${name.texture}\n` +
            "Kd 1.0 1.0 1.0\n" +
            "illum 1\n" +
            `map_Kd ${name.file}.png\n\n`
        );
    }
    return mtlText;
}
